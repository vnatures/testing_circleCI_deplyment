version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
  versatile: versatile/circleci-deployments@1.3.4
  slack: circleci/slack@4.5.0

production-filtering: &production-filtering
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v.*/

jobs:
  build:
    docker:
      - image: circleci/node:12.22.6-browsers
    steps:
      - checkout
      - run: env
      - run:
          command: "npm ci --production=false"
          name: "Install Dependencies"
      - run:
          command: "npm run build"
          name: "Build app for $CIRCLE_TAG"
      - run:
          command: "ls -alh"
          name: "Test"
      - persist_to_workspace:
          root: ~/project
          paths:
            - build
            - .env
            - package.json
  sourcemaps:
    docker:
      - image: circleci/node:12.18.4-browsers  
    steps:
      - checkout
      - attach_workspace:
          at: ~/project

  release:
    docker:
      - image: cimg/node:17.1.0
    steps:
      - checkout
      - run: env
      - run:
          name: Add github.com to known hosts
          command: |
            mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.email "circleci@versatile.ai"
            git config --global user.name "circleci-workflow"
      - run:
          name: Versioning
          command: |
            LAST_COMMIT_SEMVER=$(git log --format=oneline -n 1 $CIRCLE_SHA1  | sed -n 's/.*\[\(major|minor|patch\)\].*/\1/p')
            npm version ${LAST_COMMIT_SEMVER:=minor} -m "version %s [skip ci]"
      - run:
          name: Fast forward master from staging
          command: |
            git checkout staging
            git merge --ff-only master
      - run:
          name: Push tag & changes to github.com
          command: |
            git log --all --color --oneline --decorate --graph -n 10
            git push -u origin staging
            git push -u origin master
            git push --tags
            git log --all --color --oneline --decorate --graph -n 15

workflows:
  build-and-deploy:
    jobs:
      - build:
          name: build-production
          context:
            - base-context
            - production
      - sourcemaps:
          name: sourcemaps-test
          post-steps:
            - run:
                name: 'Install cmake'
                command: 'sudo apt install cmake'
            - run:
                name: 'Upload sourcemaps to Datadog'
                command: |
                  ls -alh
                  export APP_NAME_TEST=circleci-test
                  export RELEASE_VERSION=$(node -pe "require('./package.json').version")
                  export MINIFIED_PATH_PREFIX=https://sourcemaps-test.versatile.ai/
                  npx @datadog/datadog-ci@0.17.13 sourcemaps upload ./build --service ${APP_NAME_TEST} --minified-path-prefix ${MINIFIED_PATH_PREFIX} --release-version ${RELEASE_VERSION}
          requires:
            - build-production
          context:
            - base-context
            - slack-secrets
            - production
